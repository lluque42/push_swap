.TH "include/ps_lang_instructions.h" 3 "Fri Feb 9 2024" "Version 2024-02-09" "Push Swap" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/ps_lang_instructions.h
.SH SYNOPSIS
.br
.PP
\fC#include 'ps_lang_types\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBsa\fP (\fBt_ps_stacks\fP *ps)"
.br
.RI "\fBsa\fP -- Swap a\&. "
.ti -1c
.RI "void \fBsb\fP (\fBt_ps_stacks\fP *ps)"
.br
.RI "\fBsb\fP -- Swap b\&. "
.ti -1c
.RI "void \fBss\fP (\fBt_ps_stacks\fP *ps)"
.br
.RI "\fBss\fP -- Swap a and b at the same time\&. "
.ti -1c
.RI "void \fBpa\fP (\fBt_ps_stacks\fP *ps)"
.br
.RI "\fBpa\fP -- Pop b then push it to a\&. "
.ti -1c
.RI "void \fBpb\fP (\fBt_ps_stacks\fP *ps)"
.br
.RI "\fBpb\fP -- Pop a then push it to b\&. "
.ti -1c
.RI "void \fBra\fP (\fBt_ps_stacks\fP *ps)"
.br
.RI "\fBra\fP -- Rotate a\&. "
.ti -1c
.RI "void \fBrb\fP (\fBt_ps_stacks\fP *ps)"
.br
.RI "\fBrb\fP -- Rotate b\&. "
.ti -1c
.RI "void \fBrr\fP (\fBt_ps_stacks\fP *ps)"
.br
.RI "\fBrr\fP -- Rotate a and b at the same time\&. "
.ti -1c
.RI "void \fBrra\fP (\fBt_ps_stacks\fP *ps)"
.br
.RI "\fBrra\fP -- Reverse rotate a\&. "
.ti -1c
.RI "void \fBrrb\fP (\fBt_ps_stacks\fP *ps)"
.br
.RI "\fBrrb\fP -- Reverse rotate b\&. "
.ti -1c
.RI "void \fBrrr\fP (\fBt_ps_stacks\fP *ps)"
.br
.RI "\fBrrr\fP -- Reverse rotate a and b at the same time\&. "
.in -1c
.SH "Detailed Description"
.PP 
Instruction set for the 'push swap language'\&. 
.SH "Function Documentation"
.PP 
.SS "void pa (\fBt_ps_stacks\fP * ps)"

.PP
\fBpa\fP -- Pop b then push it to a\&. Take the first element at the top of b and put it at the top of a\&. 
.br
 Do nothing if b is empty
.PP
\fBParameters\fP
.RS 4
\fIps\fP - The pointer to the push swap stacks struct\&.
.RE
.PP
\fBWarning\fP
.RS 4
EXTERNAL FUNCTION USED: TODO malloc()\&.
.RE
.PP
\fBRemarks\fP
.RS 4
Implementation notes: TODO Argument content is NOT checked for NULL, a node with NULL content is returned\&. If malloc fails, must return NULL\&. 
.RE
.PP

.SS "void pb (\fBt_ps_stacks\fP * ps)"

.PP
\fBpb\fP -- Pop a then push it to b\&. Take the first element at the top of a and put it at the top of b\&. 
.br
 Do nothing if b is empty
.PP
\fBParameters\fP
.RS 4
\fIps\fP - The pointer to the push swap stacks struct\&.
.RE
.PP
\fBWarning\fP
.RS 4
EXTERNAL FUNCTION USED: TODO malloc()\&.
.RE
.PP
\fBRemarks\fP
.RS 4
Implementation notes: TODO Argument content is NOT checked for NULL, a node with NULL content is returned\&. If malloc fails, must return NULL\&. 
.RE
.PP

.SS "void ra (\fBt_ps_stacks\fP * ps)"

.PP
\fBra\fP -- Rotate a\&. Shift up all elements of stack a by 1\&. 
.br
 The first element becomes the last one\&.
.PP
\fBParameters\fP
.RS 4
\fIps\fP - The pointer to the push swap stacks struct\&.
.RE
.PP
\fBWarning\fP
.RS 4
EXTERNAL FUNCTION USED: TODO malloc()\&.
.RE
.PP
\fBRemarks\fP
.RS 4
Implementation notes: TODO Argument content is NOT checked for NULL, a node with NULL content is returned\&. If malloc fails, must return NULL\&. 
.RE
.PP

.SS "void rb (\fBt_ps_stacks\fP * ps)"

.PP
\fBrb\fP -- Rotate b\&. Shift up all elements of stack b by 1\&. 
.br
 The first element becomes the last one\&.
.PP
\fBParameters\fP
.RS 4
\fIps\fP - The pointer to the push swap stacks struct\&.
.RE
.PP
\fBWarning\fP
.RS 4
EXTERNAL FUNCTION USED: TODO malloc()\&.
.RE
.PP
\fBRemarks\fP
.RS 4
Implementation notes: TODO Argument content is NOT checked for NULL, a node with NULL content is returned\&. If malloc fails, must return NULL\&. 
.RE
.PP

.SS "void rr (\fBt_ps_stacks\fP * ps)"

.PP
\fBrr\fP -- Rotate a and b at the same time\&. Performs \fBra()\fP and \fBrb()\fP at the same time\&.
.PP
\fBParameters\fP
.RS 4
\fIps\fP - The pointer to the push swap stacks struct\&.
.RE
.PP
\fBWarning\fP
.RS 4
EXTERNAL FUNCTION USED: TODO malloc()\&.
.RE
.PP
\fBRemarks\fP
.RS 4
Implementation notes: TODO Argument content is NOT checked for NULL, a node with NULL content is returned\&. If malloc fails, must return NULL\&. 
.RE
.PP

.SS "void rra (\fBt_ps_stacks\fP * ps)"

.PP
\fBrra\fP -- Reverse rotate a\&. Shift down all elements of stack a by 1\&. 
.br
 The last element becomes the first one\&.
.PP
\fBParameters\fP
.RS 4
\fIps\fP - The pointer to the push swap stacks struct\&.
.RE
.PP
\fBWarning\fP
.RS 4
EXTERNAL FUNCTION USED: TODO malloc()\&.
.RE
.PP
\fBRemarks\fP
.RS 4
Implementation notes: TODO Argument content is NOT checked for NULL, a node with NULL content is returned\&. If malloc fails, must return NULL\&. 
.RE
.PP

.SS "void rrb (\fBt_ps_stacks\fP * ps)"

.PP
\fBrrb\fP -- Reverse rotate b\&. Shift down all elements of stack b by 1\&. 
.br
 The last element becomes the first one\&.
.PP
\fBParameters\fP
.RS 4
\fIps\fP - The pointer to the push swap stacks struct\&.
.RE
.PP
\fBWarning\fP
.RS 4
EXTERNAL FUNCTION USED: TODO malloc()\&.
.RE
.PP
\fBRemarks\fP
.RS 4
Implementation notes: TODO Argument content is NOT checked for NULL, a node with NULL content is returned\&. If malloc fails, must return NULL\&. 
.RE
.PP

.SS "void rrr (\fBt_ps_stacks\fP * ps)"

.PP
\fBrrr\fP -- Reverse rotate a and b at the same time\&. Performs \fBrra()\fP and \fBrrb()\fP at the same time\&.
.PP
\fBParameters\fP
.RS 4
\fIps\fP - The pointer to the push swap stacks struct\&.
.RE
.PP
\fBWarning\fP
.RS 4
EXTERNAL FUNCTION USED: TODO malloc()\&.
.RE
.PP
\fBRemarks\fP
.RS 4
Implementation notes: TODO Argument content is NOT checked for NULL, a node with NULL content is returned\&. If malloc fails, must return NULL\&. 
.RE
.PP

.SS "void sa (\fBt_ps_stacks\fP * ps)"

.PP
\fBsa\fP -- Swap a\&. Swap the first 2 elements at the top of stack a\&. 
.br
 Do nothing if there is only one or no elements\&.
.PP
\fBParameters\fP
.RS 4
\fIps\fP - The pointer to the push swap stacks struct\&.
.RE
.PP
\fBWarning\fP
.RS 4
EXTERNAL FUNCTION USED: TODO malloc()\&.
.RE
.PP
\fBRemarks\fP
.RS 4
Implementation notes: TODO Argument content is NOT checked for NULL, a node with NULL content is returned\&. If malloc fails, must return NULL\&. 
.RE
.PP

.SS "void sb (\fBt_ps_stacks\fP * ps)"

.PP
\fBsb\fP -- Swap b\&. Swap the first 2 elements at the top of stack b\&. 
.br
 Do nothing if there is only one or no elements\&.
.PP
\fBParameters\fP
.RS 4
\fIps\fP - The pointer to the push swap stacks struct\&.
.RE
.PP
\fBWarning\fP
.RS 4
EXTERNAL FUNCTION USED: TODO malloc()\&.
.RE
.PP
\fBRemarks\fP
.RS 4
Implementation notes: TODO Argument content is NOT checked for NULL, a node with NULL content is returned\&. If malloc fails, must return NULL\&. 
.RE
.PP

.SS "void ss (\fBt_ps_stacks\fP * ps)"

.PP
\fBss\fP -- Swap a and b at the same time\&. Performs \fBsa()\fP and \fBsb()\fP at the same time\&.
.PP
\fBParameters\fP
.RS 4
\fIps\fP - The pointer to the push swap stacks struct\&.
.RE
.PP
\fBWarning\fP
.RS 4
EXTERNAL FUNCTION USED: TODO malloc()\&.
.RE
.PP
\fBRemarks\fP
.RS 4
Implementation notes: TODO Argument content is NOT checked for NULL, a node with NULL content is returned\&. If malloc fails, must return NULL\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Push Swap from the source code\&.
